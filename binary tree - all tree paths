# class Node:
#   def __init__(self, val):
#     self.val = val
#     self.left = None
#     self.right = None

def all_tree_paths(root):
  # make a final return array
  all_paths = []
  
  # in case node is none:
  if root is None:
    return []
  
  # detecting leaf node:
  if root.left is None and root.right is None:
    return [[root.val]]
  
  # add new root to all sequences in its left child and its right child
  left_path = all_tree_paths(root.left)
  for path in left_path:
    all_paths.append([root.val, *path])
  
  right_path = all_tree_paths(root.right)
  for path in right_path:
    all_paths.append([root.val, *path])
    
  return all_paths
  
  
  
  
  
  
  
  
  
  
  
  
    
